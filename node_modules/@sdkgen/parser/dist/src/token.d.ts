export declare class TokenLocation {
    filename: string;
    line: number;
    column: number;
    toString(): string;
}
export declare class Token {
    value: string;
    location: TokenLocation;
    constructor(value?: string);
    maybeAsIdentifier(): Token;
    toString(): string;
}
export declare class IdentifierToken extends Token {
}
export declare class StringLiteralToken extends Token {
}
export declare class EqualSymbolToken extends Token {
}
export declare class ExclamationMarkSymbolToken extends Token {
}
export declare class CurlyOpenSymbolToken extends Token {
}
export declare class CurlyCloseSymbolToken extends Token {
}
export declare class ParensOpenSymbolToken extends Token {
}
export declare class ParensCloseSymbolToken extends Token {
}
export declare class ColonSymbolToken extends Token {
}
export declare class OptionalSymbolToken extends Token {
}
export declare class ArraySymbolToken extends Token {
}
export declare class CommaSymbolToken extends Token {
}
export declare class SpreadSymbolToken extends Token {
}
export declare class AnnotationToken extends Token {
}
export declare class ImportKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class TypeKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class EnumKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class FnKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class ErrorKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class TrueKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class FalseKeywordToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
export declare class PrimitiveTypeToken extends Token {
    maybeAsIdentifier(): IdentifierToken;
}
