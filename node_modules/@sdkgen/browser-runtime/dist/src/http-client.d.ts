import type { AstJson } from "./ast";
import type { SdkgenError, SdkgenErrorWithData } from "./error";
import type { DeepReadonly } from "./utils";
type ErrClasses = Record<string, (new (message: string, data: any) => SdkgenErrorWithData<any>) | (new (message: string) => SdkgenError) | undefined>;
export declare class SdkgenHttpClient {
    private baseUrl;
    private astJson;
    private errClasses;
    extra: Map<string, unknown>;
    successHook: (result: any, name: string, args: any) => void;
    errorHook: (result: any, name: string, args: any) => void;
    constructor(baseUrl: string, astJson: DeepReadonly<AstJson>, errClasses: ErrClasses);
    makeRequest(functionName: string, args: unknown): Promise<any>;
}
export {};
